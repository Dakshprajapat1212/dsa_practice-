Bilkul bhai Daksh! Main tujhe **poora C++ Stack code** line-by-line explain karta hoon, aur uske baad **dry run** (jaise manually chalake dekhte hain program kaise kaam karta hai) bhi karaata hoon.

---

## 🔷 Code Explanation (Line-by-line)

```cpp
#include <bits/stdc++.h>
using namespace std;
```

* Ye line **C++ ki sari standard libraries** include karti hai.
* `using namespace std;` se tumhe `std::cout` ki jagah sirf `cout` likhna padta hai.

---

### ✅ Class Stack

```cpp
class Stack {
    int top, cap;
    int *a;
```

* `top` → current top index of the stack (shuruaat me -1 hota hai).
* `cap` → maximum size (capacity) of the stack.
* `int *a` → dynamically banne wala array (heap memory me) jisme stack elements store honge.

---

### 🧱 Constructor

```cpp
Stack(int cap) {
    this->cap = cap;
    top = -1;
    a = new int[cap];
}
```

* Jab tum `Stack s(5);` likhte ho, to ye constructor call hota hai.
* `this->cap` means class ka `cap`.
* `top = -1` → Stack is empty.
* `a = new int[cap];` → heap me integer array banaya.

---

### ❌ Destructor

```cpp
~Stack() {
    delete[] a;
}
```

* Jab object destroy hoga (`s` program end pe), tab ye destructor chalega.
* `delete[] a` → heap memory free ho jaayegi.

---

### ✅ `push` Function

```cpp
bool push(int x) {
    if (top >= cap - 1) {
        cout << "Stack Overflow\n";
        return false;
    }
    a[++top] = x;
    return true;
}
```

* Stack full ho to **overflow** dikhaata hai.
* Agar space hai to `top` ko badha kar `a[top] = x` karta hai (naya element daalta hai).

---

### ✅ `pop` Function

```cpp
int pop() {
    if (top < 0) {
        cout << "Stack Underflow\n";
        return 0;
    }
    return a[top--];
}
```

* Agar stack khaali ho, to underflow print karta hai.
* Warna top element return karta hai aur `top` ko kam kar deta hai.

---

### ✅ `peek` Function

```cpp
int peek() {
    if (top < 0) {
        cout << "Stack is Empty\n";
        return 0;
    }
    return a[top];
}
```

* Top element ko **sirf dekhne ke liye**, bina nikaale.

---

### ✅ `isEmpty`

```cpp
bool isEmpty() {
    return top < 0;
}
```

* Batata hai ki stack khaali hai ya nahi.

---

## 🔶 `main()` Function

```cpp
int main() {
    Stack s(5);           // Stack bana capacity 5

    s.push(10);           // Stack = [10]
    s.push(20);           // Stack = [10, 20]
    s.push(30);           // Stack = [10, 20, 30]

    cout << s.pop() << " popped from stack\n";  // 30 pop ho gaya

    cout << "Top element is: " << s.peek() << endl; // Top = 20

    cout << "Elements present in stack: ";
    while (!s.isEmpty()) {
        cout << s.peek() << " ";  // Top element print
        s.pop();                  // Fir usse hatao
    }

    return 0;
}
```

---

## 🔁 Dry Run (Step-by-step Execution)

| Step | Operation     | Stack Content      | top    | Output                             |
| ---- | ------------- | ------------------ | ------ | ---------------------------------- |
| 1    | `Stack s(5);` | \[]                | -1     |                                    |
| 2    | `push(10);`   | \[10]              | 0      |                                    |
| 3    | `push(20);`   | \[10, 20]          | 1      |                                    |
| 4    | `push(30);`   | \[10, 20, 30]      | 2      |                                    |
| 5    | `pop();`      | \[10, 20]          | 1      | `30 popped from stack`             |
| 6    | `peek();`     | \[10, 20]          | 1      | `Top element is: 20`               |
| 7    | While Loop    | prints 20, then 10 | 1→0→-1 | `Elements present in stack: 20 10` |

---

## 🧾 Final Output:

```
30 popped from stack
Top element is: 20
Elements present in stack: 20 10
```

---

## ✅ Diagrammatic View (after 3 pushes)

```
Index  |   Value
---------------
  0    |   10
  1    |   20
  2    |   30   <- Top
---------------
```

After 1 `pop()`, 30 nikal gaya → Top becomes 1 → 20 is now top.

---

Bhai, agar tu bole to mai is stack ka **diagram bana ke** bhi samjha sakta hoon, ya fir STL `stack<int>` se same kaam chhoti lineon me kar ke dikhau?

Tere hisaab se agla step kya ho?
